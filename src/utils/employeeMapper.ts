import { Employee } from '@/types/employee';

// Since we're now using the database schema directly, 
// no mapping is needed - just type assertions for safety
export function validateEmployee(data: any): Employee {
  return {
    id: data.id,
    company_id: data.company_id,
    worksite_id: data.worksite_id,
    union_id: data.union_id,
    cba_id: data.cba_id,
    step: data.step,
    hire_date: data.hire_date,
    termination_date: data.termination_date,
    address: data.address || {},
    td1_federal: data.td1_federal || {},
    td1_provincial: data.td1_provincial || {},
    cpp_exempt: data.cpp_exempt || false,
    ei_exempt: data.ei_exempt || false,
    created_at: data.created_at,
    updated_at: data.updated_at,
    fte_hours_per_week: data.fte_hours_per_week,
    reports_to_id: data.reports_to_id,
    overtime_eligible: data.overtime_eligible,
    ot_multiplier: data.ot_multiplier,
    vacation_policy_id: data.vacation_policy_id,
    seniority_date: data.seniority_date,
    permit_expiry: data.permit_expiry,
    probation_end: data.probation_end,
    management_position: data.management_position,
    salary: data.salary,
    annual_salary: data.annual_salary,
    rate2: data.rate2,
    standard_hours: data.standard_hours,
    premium_rate_factor: data.premium_rate_factor,
    fte: data.fte,
    scheduled_hours: data.scheduled_hours,
    accrual_date: data.accrual_date,
    default_request_hours: data.default_request_hours,
    position_start_date: data.position_start_date,
    rehire_date: data.rehire_date,
    leave_return_date: data.leave_return_date,
    job_function: data.job_function,
    worker_category: data.worker_category,
    pay_grade: data.pay_grade,
    pay_frequency: data.pay_frequency,
    business_unit: data.business_unit,
    location: data.location,
    benefits_eligibility_class: data.benefits_eligibility_class,
    union_code: data.union_code,
    union_local: data.union_local,
    home_department: data.home_department,
    home_cost_number: data.home_cost_number,
    assigned_shift: data.assigned_shift,
    default_start_time: data.default_start_time,
    employee_number: data.employee_number,
    first_name: data.first_name,
    last_name: data.last_name,
    sin_encrypted: data.sin_encrypted,
    province_code: data.province_code,
    classification: data.classification,
    leave_return_reason: data.leave_return_reason,
    email: data.email,
    phone: data.phone,
    rehire_reason: data.rehire_reason,
    banking_info_encrypted: data.banking_info_encrypted,
    status: data.status,
    gl_cost_center: data.gl_cost_center,
    work_eligibility: data.work_eligibility,
    td1_federal_status: data.td1_federal_status,
    td1_provincial_status: data.td1_provincial_status,
    company_code: data.company_code,
    job_title: data.job_title,
  };
}